apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: kong
  name: cm-generator
---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: kong
  name: cm-generator
spec:
  template:
    metadata:
      creationTimestamp: null
    spec:
      restartPolicy: OnFailure
      serviceAccountName: cm-generator 
      volumes:
      - name: cm-generator
        configMap:
          name: cm-generator
          defaultMode: 0711 
      containers:
      - image: cmwylie19/kube-argo-base
        name: cm-generator
        resources: {}
        volumeMounts:
        - name: cm-generator
          mountPath: /opt/scripts
        securityContext:
           runAsUser: 0
        command: ["sh","-c","/opt/scripts/cm-creator.sh"]
---
apiVersion: v1
data:
  cm-creator.sh: |-
    #!/bin/bash
    set -eu

    # Get CLUSTER_URL
    CLUSTER_URL=$(oc get svc kong-kong-cluster -ojsonpath='{.status.loadBalancer.ingress[].ip}' -n kong)

    # if deploying on GCP ingress address = ip if on AWS ingress address = hostname
    if [ -z "$CLUSTER_URL" ];
    then 
      CLUSTER_URL=$(oc get svc kong-kong-cluster -ojsonpath='{.status.loadBalancer.ingress[].hostname}' -n kong)
    else 
      echo "CLUSTER_URL Not NULL";
    fi

    echo $CLUSTER_URL

    # Get CLUSTER_TELEMETRY_URL
    CLUSTER_TELEMETRY_URL=$(oc get svc kong-kong-clustertelemetry -n kong -ojsonpath='{.status.loadBalancer.ingress[].hostname}' -n kong)

    if [ -z "$CLUSTER_URL" ];
    then 
      CLUSTER_TELEMETRY_URL=$(oc get svc kong-kong-clustertelemetry -n kong -ojsonpath='{.status.loadBalancer.ingress[].ip}' -n kong)
    else 
      echo "CLUSTER_TELEMETRY_URL Not NULL";
    fi

    echo $CLUSTER_TELEMETRY_URL

    kubectl create cm cluster-urls -n kong --from-literal=CLUSTER_URL=$CLUSTER_URL --from-literal=CLUSTER_TELEMETRY_URL=$CLUSTER_TELEMETRY_URL
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: cm-generator
  namespace: kong
---
# sa needs to get secrets, routes, in kong and openshift-gitops namespaces
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: cm-generator
  namespace: kong
rules:
- apiGroups:
  - security.openshift.io
  resourceNames:
  - anyuid
  resources:
  - securitycontextconstraints
  verbs:
  - use
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: cm-generator-binding
  namespace: kong
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cm-generator
subjects:
- kind: ServiceAccount
  name: cm-generator
  namespace: kong
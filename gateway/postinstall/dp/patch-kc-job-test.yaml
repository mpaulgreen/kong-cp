apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: kong
  name: patch-kc
---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: kong
  name: patch-kc
spec:
  backoffLimit: 9
  completions: 1
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccountName: patch-kc
      volumes:
      - name: patch-kc
        configMap:
          name: patch-kc
          defaultMode: 0711 
      containers:
      - image: cmwylie19/kube-argo-base
        name: kube-argo-base
        resources: {}
        volumeMounts:
        - name: patch-kc
          mountPath: /opt/scripts
        securityContext:
           runAsUser: 0
        command: ["sh","-c","/opt/scripts/patch-kc.sh"]
---
apiVersion: v1
data:
  patch-kc.sh: |
    #!/bin/bash
    set -eu

    # OCP Domain
    OCP_DOMAIN=`oc get ingresses.config/cluster -o jsonpath={.spec.domain}`

    kubectl patch keycloakclient -n kong-keycloak kuma-demo-client -n kong-keycloak -p '{"spec":{"client":{"redirectUris":["http://demo-app-kong.$(oc get ingresses.config/cluster -o jsonpath={.spec.domain})"],"rootUrl":"http://demo-app-kong.$(oc get ingresses.config/cluster -o jsonpath={.spec.domain})"}}}' --type=merge
kind: ConfigMap
metadata:
  namespace: kong
  name: patch-kc
---
# sa needs to get secrets, routes, in kong and openshift-gitops namespaces
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: patch-kc
rules:
- apiGroups:
  - security.openshift.io
  resourceNames:
  - anyuid
  resources:
  - securitycontextconstraints
  verbs:
  - use
- apiGroups:
  - keycloak.org
  resources:
  - keycloakclients
  verbs:
  - patch
- apiGroups:
  - config.openshift.io
  resources:
  - ingresses/cluster
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: patch-kc-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: patch-kc
subjects:
- kind: ServiceAccount
  name: patch-kc
  namespace: kong